// Copyright 1998-2014 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Public/Escape_Vector.h"
#include "Escape_Vector.generated.dep.h"
void EmptyLinkFunctionForGeneratedCodeEscape_Vector() {}
	void AEscape_VectorCharacter::StaticRegisterNativesAEscape_VectorCharacter()
	{
		FNativeFunctionRegistrar::RegisterFunction(AEscape_VectorCharacter::StaticClass(),"IsRespawning",(Native)&AEscape_VectorCharacter::execIsRespawning);
		FNativeFunctionRegistrar::RegisterFunction(AEscape_VectorCharacter::StaticClass(),"OnFire",(Native)&AEscape_VectorCharacter::execOnFire);
		FNativeFunctionRegistrar::RegisterFunction(AEscape_VectorCharacter::StaticClass(),"respawnToCheckPoint",(Native)&AEscape_VectorCharacter::execrespawnToCheckPoint);
		FNativeFunctionRegistrar::RegisterFunction(AEscape_VectorCharacter::StaticClass(),"touchPanneau",(Native)&AEscape_VectorCharacter::exectouchPanneau);
		FNativeFunctionRegistrar::RegisterFunction(AEscape_VectorCharacter::StaticClass(),"touchShip",(Native)&AEscape_VectorCharacter::exectouchShip);
	}
	IMPLEMENT_CLASS(AEscape_VectorCharacter);
	void AEscape_VectorCharacter::IsRespawning()
	{
		ProcessEvent(FindFunctionChecked(ESCAPE_VECTOR_IsRespawning),NULL);
	}
	void AEscape_VectorGameMode::StaticRegisterNativesAEscape_VectorGameMode()
	{
	}
	IMPLEMENT_CLASS(AEscape_VectorGameMode);
	void AEscape_VectorHUD::StaticRegisterNativesAEscape_VectorHUD()
	{
	}
	IMPLEMENT_CLASS(AEscape_VectorHUD);
	void AEscape_VectorLeecherPawn::StaticRegisterNativesAEscape_VectorLeecherPawn()
	{
	}
	IMPLEMENT_CLASS(AEscape_VectorLeecherPawn);
	void AEscape_VectorProjectile::StaticRegisterNativesAEscape_VectorProjectile()
	{
		FNativeFunctionRegistrar::RegisterFunction(AEscape_VectorProjectile::StaticClass(),"OnHit",(Native)&AEscape_VectorProjectile::execOnHit);
	}
	IMPLEMENT_CLASS(AEscape_VectorProjectile);
	void AEscape_VectorSpawnLeecherVolume::StaticRegisterNativesAEscape_VectorSpawnLeecherVolume()
	{
		FNativeFunctionRegistrar::RegisterFunction(AEscape_VectorSpawnLeecherVolume::StaticClass(),"DisableSpawning",(Native)&AEscape_VectorSpawnLeecherVolume::execDisableSpawning);
		FNativeFunctionRegistrar::RegisterFunction(AEscape_VectorSpawnLeecherVolume::StaticClass(),"EnableSpawning",(Native)&AEscape_VectorSpawnLeecherVolume::execEnableSpawning);
	}
	IMPLEMENT_CLASS(AEscape_VectorSpawnLeecherVolume);
FName ESCAPE_VECTOR_IsRespawning = FName(TEXT("IsRespawning"));
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_UObject_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMontage_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_AHUD();
	ENGINE_API class UClass* Z_Construct_UClass_APawn();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCapsuleComponent_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_UEngineTypes_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UProjectileMovementComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USphereComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBoxComponent_NoRegister();

	ESCAPE_VECTOR_API class UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_IsRespawning();
	ESCAPE_VECTOR_API class UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_OnFire();
	ESCAPE_VECTOR_API class UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_respawnToCheckPoint();
	ESCAPE_VECTOR_API class UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_touchPanneau();
	ESCAPE_VECTOR_API class UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_touchShip();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorCharacter_NoRegister();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorCharacter();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorGameMode_NoRegister();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorGameMode();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorHUD_NoRegister();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorHUD();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorLeecherPawn_NoRegister();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorLeecherPawn();
	ESCAPE_VECTOR_API class UFunction* Z_Construct_UFunction_AEscape_VectorProjectile_OnHit();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorProjectile_NoRegister();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorProjectile();
	ESCAPE_VECTOR_API class UFunction* Z_Construct_UFunction_AEscape_VectorSpawnLeecherVolume_DisableSpawning();
	ESCAPE_VECTOR_API class UFunction* Z_Construct_UFunction_AEscape_VectorSpawnLeecherVolume_EnableSpawning();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorSpawnLeecherVolume_NoRegister();
	ESCAPE_VECTOR_API class UClass* Z_Construct_UClass_AEscape_VectorSpawnLeecherVolume();
	ESCAPE_VECTOR_API class UPackage* Z_Construct_UPackage_Escape_Vector();
	UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_IsRespawning()
	{
		UClass* OuterClass=Z_Construct_UClass_AEscape_VectorCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("IsRespawning"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x08020C00, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pawn|Character"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_OnFire()
	{
		UClass* OuterClass=Z_Construct_UClass_AEscape_VectorCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnFire"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pawn|Character"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Fires a projectile."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_respawnToCheckPoint()
	{
		UClass* OuterClass=Z_Construct_UClass_AEscape_VectorCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("respawnToCheckPoint"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pawn|Character"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_touchPanneau()
	{
		UClass* OuterClass=Z_Construct_UClass_AEscape_VectorCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("touchPanneau"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pawn|Character"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEscape_VectorCharacter_touchShip()
	{
		UClass* OuterClass=Z_Construct_UClass_AEscape_VectorCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("touchShip"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pawn|Character"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AEscape_VectorCharacter_NoRegister()
	{
		return AEscape_VectorCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_AEscape_VectorCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage_Escape_Vector();
			OuterClass = AEscape_VectorCharacter::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800080;

			OuterClass->LinkChild(Z_Construct_UFunction_AEscape_VectorCharacter_IsRespawning());
			OuterClass->LinkChild(Z_Construct_UFunction_AEscape_VectorCharacter_OnFire());
			OuterClass->LinkChild(Z_Construct_UFunction_AEscape_VectorCharacter_respawnToCheckPoint());
			OuterClass->LinkChild(Z_Construct_UFunction_AEscape_VectorCharacter_touchPanneau());
			OuterClass->LinkChild(Z_Construct_UFunction_AEscape_VectorCharacter_touchShip());

			UProperty* NewProp_plateFormeCheckPointPosition = new(OuterClass, TEXT("plateFormeCheckPointPosition"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(plateFormeCheckPointPosition, AEscape_VectorCharacter), 0x0000000000000005, Z_Construct_UScriptStruct_UObject_FVector());
			UProperty* NewProp_TimeForDashSpeed = new(OuterClass, TEXT("TimeForDashSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(TimeForDashSpeed, AEscape_VectorCharacter), 0x0000000000000005);
			UProperty* NewProp_MultiDashSpeed = new(OuterClass, TEXT("MultiDashSpeed"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MultiDashSpeed, AEscape_VectorCharacter), 0x0000000000000005);
			UProperty* NewProp_MultiVitesseDeplacement = new(OuterClass, TEXT("MultiVitesseDeplacement"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(MultiVitesseDeplacement, AEscape_VectorCharacter), 0x0000000000000005);
			UProperty* NewProp_VitesseMax = new(OuterClass, TEXT("VitesseMax"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(VitesseMax, AEscape_VectorCharacter), 0x0000000000000005);
			UProperty* NewProp_VitesseLow = new(OuterClass, TEXT("VitesseLow"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(VitesseLow, AEscape_VectorCharacter), 0x0000000000000005);
			UProperty* NewProp_panneauSkeletalMeshReference = new(OuterClass, TEXT("panneauSkeletalMeshReference"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(panneauSkeletalMeshReference, AEscape_VectorCharacter), 0x000000000408000d, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
			UProperty* NewProp_iNbDead = new(OuterClass, TEXT("iNbDead"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(iNbDead, AEscape_VectorCharacter), 0x0000000000000005);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShipTouch, AEscape_VectorCharacter, bool);
			UProperty* NewProp_bShipTouch = new(OuterClass, TEXT("bShipTouch"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShipTouch, AEscape_VectorCharacter), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bShipTouch, AEscape_VectorCharacter), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bVolumeTouch, AEscape_VectorCharacter, bool);
			UProperty* NewProp_bVolumeTouch = new(OuterClass, TEXT("bVolumeTouch"), RF_Public|RF_Transient|RF_Native) UBoolProperty(FPostConstructInitializeProperties(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bVolumeTouch, AEscape_VectorCharacter), 0x0000000000000005, CPP_BOOL_PROPERTY_BITMASK(bVolumeTouch, AEscape_VectorCharacter), sizeof(bool), true);
			UProperty* NewProp_FireAnimation = new(OuterClass, TEXT("FireAnimation"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FireAnimation, AEscape_VectorCharacter), 0x0000000000000005, Z_Construct_UClass_UAnimMontage_NoRegister());
			UProperty* NewProp_FireSound = new(OuterClass, TEXT("FireSound"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FireSound, AEscape_VectorCharacter), 0x0000000000000005, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_ProjectileClass = new(OuterClass, TEXT("ProjectileClass"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(ProjectileClass, AEscape_VectorCharacter), 0x0000000000010001, Z_Construct_UClass_AEscape_VectorProjectile_NoRegister());
			UProperty* NewProp_GunOffset = new(OuterClass, TEXT("GunOffset"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(GunOffset, AEscape_VectorCharacter), 0x0000000000000005, Z_Construct_UScriptStruct_UObject_FVector());
			UProperty* NewProp_BaseLookUpRate = new(OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, AEscape_VectorCharacter), 0x0000000000020015);
			UProperty* NewProp_BaseTurnRate = new(OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, AEscape_VectorCharacter), 0x0000000000020015);
			UProperty* NewProp_FirstPersonCameraComponent = new(OuterClass, TEXT("FirstPersonCameraComponent"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(FirstPersonCameraComponent, AEscape_VectorCharacter), 0x00000000044a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
			UProperty* NewProp_Mesh1P = new(OuterClass, TEXT("Mesh1P"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(Mesh1P, AEscape_VectorCharacter), 0x00000000044b0009, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEscape_VectorCharacter_IsRespawning());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEscape_VectorCharacter_OnFire());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEscape_VectorCharacter_respawnToCheckPoint());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEscape_VectorCharacter_touchPanneau());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEscape_VectorCharacter_touchShip());
			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation AI|Navigation Pawn|Character|InternalEvents"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Escape_VectorCharacter.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_plateFormeCheckPointPosition, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(NewProp_plateFormeCheckPointPosition, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_TimeForDashSpeed, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(NewProp_TimeForDashSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_MultiDashSpeed, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(NewProp_MultiDashSpeed, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_MultiVitesseDeplacement, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(NewProp_MultiVitesseDeplacement, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_MultiVitesseDeplacement, TEXT("ToolTip"), TEXT("Multiplication de la vitesse de deplacement plus le joueur\nse d?placement rapidement de plate-forme en plate-forme"));
			MetaData->SetValue(NewProp_VitesseMax, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(NewProp_VitesseMax, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_VitesseMax, TEXT("ToolTip"), TEXT("Vitesse maximal que le joueur peux atteindre par accel?ration"));
			MetaData->SetValue(NewProp_VitesseLow, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(NewProp_VitesseLow, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_VitesseLow, TEXT("ToolTip"), TEXT("Vitesse lorsque le joueur commence ? se propulser"));
			MetaData->SetValue(NewProp_panneauSkeletalMeshReference, TEXT("Category"), TEXT("Leecher"));
			MetaData->SetValue(NewProp_panneauSkeletalMeshReference, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_iNbDead, TEXT("Category"), TEXT("Player"));
			MetaData->SetValue(NewProp_iNbDead, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_iNbDead, TEXT("ToolTip"), TEXT("Variable qui permet de stocker le nombre de mort du joueur"));
			MetaData->SetValue(NewProp_bShipTouch, TEXT("Category"), TEXT("Gameplay"));
			MetaData->SetValue(NewProp_bShipTouch, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_bShipTouch, TEXT("ToolTip"), TEXT("Vrai si on touche le vaisseau"));
			MetaData->SetValue(NewProp_bVolumeTouch, TEXT("Category"), TEXT("Gameplay"));
			MetaData->SetValue(NewProp_bVolumeTouch, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_bVolumeTouch, TEXT("ToolTip"), TEXT("Vrai si on touche ? un volume"));
			MetaData->SetValue(NewProp_FireAnimation, TEXT("Category"), TEXT("Gameplay"));
			MetaData->SetValue(NewProp_FireAnimation, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_FireAnimation, TEXT("ToolTip"), TEXT("AnimMontage to play each time we fire"));
			MetaData->SetValue(NewProp_FireSound, TEXT("Category"), TEXT("Gameplay"));
			MetaData->SetValue(NewProp_FireSound, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_FireSound, TEXT("ToolTip"), TEXT("Sound to play each time we fire"));
			MetaData->SetValue(NewProp_ProjectileClass, TEXT("Category"), TEXT("Projectile"));
			MetaData->SetValue(NewProp_ProjectileClass, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_ProjectileClass, TEXT("ToolTip"), TEXT("Projectile class to spawn"));
			MetaData->SetValue(NewProp_GunOffset, TEXT("Category"), TEXT("Gameplay"));
			MetaData->SetValue(NewProp_GunOffset, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_GunOffset, TEXT("ToolTip"), TEXT("Gun muzzle's offset from the characters location"));
			MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("Category"), TEXT("Camera"));
			MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ToolTip"), TEXT("Base look up/down rate, in deg/sec. Other scaling may affect final rate."));
			MetaData->SetValue(NewProp_BaseTurnRate, TEXT("Category"), TEXT("Camera"));
			MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ToolTip"), TEXT("Base turn rate, in deg/sec. Other scaling may affect final turn rate."));
			MetaData->SetValue(NewProp_FirstPersonCameraComponent, TEXT("Category"), TEXT("Camera"));
			MetaData->SetValue(NewProp_FirstPersonCameraComponent, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_FirstPersonCameraComponent, TEXT("ToolTip"), TEXT("First person camera"));
			MetaData->SetValue(NewProp_Mesh1P, TEXT("Category"), TEXT("Mesh"));
			MetaData->SetValue(NewProp_Mesh1P, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorCharacter.h"));
			MetaData->SetValue(NewProp_Mesh1P, TEXT("ToolTip"), TEXT("Pawn mesh: 1st person view (arms; seen only by self)"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEscape_VectorCharacter(Z_Construct_UClass_AEscape_VectorCharacter);
	UClass* Z_Construct_UClass_AEscape_VectorGameMode_NoRegister()
	{
		return AEscape_VectorGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_AEscape_VectorGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage_Escape_Vector();
			OuterClass = AEscape_VectorGameMode::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x008802A4;


			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Input Movement Collision Rendering Utilities|Transformation Info MovementReplication Replication Actor"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Escape_VectorGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorGameMode.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEscape_VectorGameMode(Z_Construct_UClass_AEscape_VectorGameMode);
	UClass* Z_Construct_UClass_AEscape_VectorHUD_NoRegister()
	{
		return AEscape_VectorHUD::StaticClass();
	}
	UClass* Z_Construct_UClass_AEscape_VectorHUD()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AHUD();
			Z_Construct_UPackage_Escape_Vector();
			OuterClass = AEscape_VectorHUD::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x0080028C;


			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Rendering Actor Input Replication"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Escape_VectorHUD.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorHUD.h"));
			MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEscape_VectorHUD(Z_Construct_UClass_AEscape_VectorHUD);
	UClass* Z_Construct_UClass_AEscape_VectorLeecherPawn_NoRegister()
	{
		return AEscape_VectorLeecherPawn::StaticClass();
	}
	UClass* Z_Construct_UClass_AEscape_VectorLeecherPawn()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APawn();
			Z_Construct_UPackage_Escape_Vector();
			OuterClass = AEscape_VectorLeecherPawn::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800080;


			UProperty* NewProp_SocketName = new(OuterClass, TEXT("SocketName"), RF_Public|RF_Transient|RF_Native) UNameProperty(CPP_PROPERTY_BASE(SocketName, AEscape_VectorLeecherPawn), 0x0000000000000005);
			UProperty* NewProp_VitesseLeecher = new(OuterClass, TEXT("VitesseLeecher"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(VitesseLeecher, AEscape_VectorLeecherPawn), 0x0000000000000005);
			UProperty* NewProp_shipStaticMeshReference = new(OuterClass, TEXT("shipStaticMeshReference"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(shipStaticMeshReference, AEscape_VectorLeecherPawn), 0x000000000408000d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
			UProperty* NewProp_sceneComponentLeecher = new(OuterClass, TEXT("sceneComponentLeecher"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(sceneComponentLeecher, AEscape_VectorLeecherPawn), 0x00000000044a001d, Z_Construct_UClass_USceneComponent_NoRegister());
			UProperty* NewProp_capsuleComponentLeecher = new(OuterClass, TEXT("capsuleComponentLeecher"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(capsuleComponentLeecher, AEscape_VectorLeecherPawn), 0x00000000044a001d, Z_Construct_UClass_UCapsuleComponent_NoRegister());
			UProperty* NewProp_MeshLeecher = new(OuterClass, TEXT("MeshLeecher"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(MeshLeecher, AEscape_VectorLeecherPawn), 0x00000000044a001d, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation AI|Navigation"));
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Escape_VectorLeecherPawn.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorLeecherPawn.h"));
			MetaData->SetValue(NewProp_SocketName, TEXT("Category"), TEXT("Leecher"));
			MetaData->SetValue(NewProp_SocketName, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorLeecherPawn.h"));
			MetaData->SetValue(NewProp_VitesseLeecher, TEXT("Category"), TEXT("Leecher"));
			MetaData->SetValue(NewProp_VitesseLeecher, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorLeecherPawn.h"));
			MetaData->SetValue(NewProp_shipStaticMeshReference, TEXT("Category"), TEXT("Leecher"));
			MetaData->SetValue(NewProp_shipStaticMeshReference, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorLeecherPawn.h"));
			MetaData->SetValue(NewProp_sceneComponentLeecher, TEXT("Category"), TEXT("Leecher"));
			MetaData->SetValue(NewProp_sceneComponentLeecher, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorLeecherPawn.h"));
			MetaData->SetValue(NewProp_capsuleComponentLeecher, TEXT("Category"), TEXT("Leecher"));
			MetaData->SetValue(NewProp_capsuleComponentLeecher, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorLeecherPawn.h"));
			MetaData->SetValue(NewProp_MeshLeecher, TEXT("Category"), TEXT("Leecher"));
			MetaData->SetValue(NewProp_MeshLeecher, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorLeecherPawn.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEscape_VectorLeecherPawn(Z_Construct_UClass_AEscape_VectorLeecherPawn);
	UFunction* Z_Construct_UFunction_AEscape_VectorProjectile_OnHit()
	{
		struct Escape_VectorProjectile_eventOnHit_Parms
		{
			class AActor* OtherActor;
			class UPrimitiveComponent* OtherComp;
			FVector NormalImpulse;
			struct FHitResult Hit;
		};
		UClass* OuterClass=Z_Construct_UClass_AEscape_VectorProjectile();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("OnHit"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x00C20401, 65535, sizeof(Escape_VectorProjectile_eventOnHit_Parms));
			UProperty* NewProp_Hit = new(ReturnFunction, TEXT("Hit"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(Hit, Escape_VectorProjectile_eventOnHit_Parms), 0x0000000008000182, Z_Construct_UScriptStruct_UEngineTypes_FHitResult());
			UProperty* NewProp_NormalImpulse = new(ReturnFunction, TEXT("NormalImpulse"), RF_Public|RF_Transient|RF_Native) UStructProperty(CPP_PROPERTY_BASE(NormalImpulse, Escape_VectorProjectile_eventOnHit_Parms), 0x0000000000000080, Z_Construct_UScriptStruct_UObject_FVector());
			UProperty* NewProp_OtherComp = new(ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, Escape_VectorProjectile_eventOnHit_Parms), 0x0000000004080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, Escape_VectorProjectile_eventOnHit_Parms), 0x0000000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorProjectile.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("called when projectile hits something"));
			MetaData->SetValue(NewProp_Hit, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorProjectile.h"));
			MetaData->SetValue(NewProp_NormalImpulse, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorProjectile.h"));
			MetaData->SetValue(NewProp_OtherComp, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorProjectile.h"));
			MetaData->SetValue(NewProp_OtherActor, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorProjectile.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AEscape_VectorProjectile_NoRegister()
	{
		return AEscape_VectorProjectile::StaticClass();
	}
	UClass* Z_Construct_UClass_AEscape_VectorProjectile()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Escape_Vector();
			OuterClass = AEscape_VectorProjectile::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800080;

			OuterClass->LinkChild(Z_Construct_UFunction_AEscape_VectorProjectile_OnHit());

			UProperty* NewProp_ProjectileMovement = new(OuterClass, TEXT("ProjectileMovement"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(ProjectileMovement, AEscape_VectorProjectile), 0x00000000044a001d, Z_Construct_UClass_UProjectileMovementComponent_NoRegister());
			UProperty* NewProp_CollisionComp = new(OuterClass, TEXT("CollisionComp"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(CollisionComp, AEscape_VectorProjectile), 0x00000000044b0009, Z_Construct_UClass_USphereComponent_NoRegister());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEscape_VectorProjectile_OnHit());
			OuterClass->ClassConfigName = FName(TEXT("Game"));
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Escape_VectorProjectile.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorProjectile.h"));
			MetaData->SetValue(NewProp_ProjectileMovement, TEXT("Category"), TEXT("Movement"));
			MetaData->SetValue(NewProp_ProjectileMovement, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorProjectile.h"));
			MetaData->SetValue(NewProp_ProjectileMovement, TEXT("ToolTip"), TEXT("Projectile movement component"));
			MetaData->SetValue(NewProp_CollisionComp, TEXT("Category"), TEXT("Projectile"));
			MetaData->SetValue(NewProp_CollisionComp, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorProjectile.h"));
			MetaData->SetValue(NewProp_CollisionComp, TEXT("ToolTip"), TEXT("Sphere collision component"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEscape_VectorProjectile(Z_Construct_UClass_AEscape_VectorProjectile);
	UFunction* Z_Construct_UFunction_AEscape_VectorSpawnLeecherVolume_DisableSpawning()
	{
		UClass* OuterClass=Z_Construct_UClass_AEscape_VectorSpawnLeecherVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("DisableSpawning"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpawnLeecherVolume"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorSpawnLeecherVolume.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEscape_VectorSpawnLeecherVolume_EnableSpawning()
	{
		UClass* OuterClass=Z_Construct_UClass_AEscape_VectorSpawnLeecherVolume();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(OuterClass, TEXT("EnableSpawning"), RF_Public|RF_Transient|RF_Native) UFunction(FPostConstructInitializeProperties(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("SpawnLeecherVolume"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorSpawnLeecherVolume.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AEscape_VectorSpawnLeecherVolume_NoRegister()
	{
		return AEscape_VectorSpawnLeecherVolume::StaticClass();
	}
	UClass* Z_Construct_UClass_AEscape_VectorSpawnLeecherVolume()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage_Escape_Vector();
			OuterClass = AEscape_VectorSpawnLeecherVolume::StaticClass();
			UObjectForceRegistration(OuterClass);
			OuterClass->ClassFlags |= 0x00800080;

			OuterClass->LinkChild(Z_Construct_UFunction_AEscape_VectorSpawnLeecherVolume_DisableSpawning());
			OuterClass->LinkChild(Z_Construct_UFunction_AEscape_VectorSpawnLeecherVolume_EnableSpawning());

			UProperty* NewProp_iNbSpawnMax = new(OuterClass, TEXT("iNbSpawnMax"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(iNbSpawnMax, AEscape_VectorSpawnLeecherVolume), 0x0000000000000005);
			UProperty* NewProp_SpawnDelay = new(OuterClass, TEXT("SpawnDelay"), RF_Public|RF_Transient|RF_Native) UFloatProperty(CPP_PROPERTY_BASE(SpawnDelay, AEscape_VectorSpawnLeecherVolume), 0x0000000000000005);
			UProperty* NewProp_WhatToSpawn = new(OuterClass, TEXT("WhatToSpawn"), RF_Public|RF_Transient|RF_Native) UClassProperty(CPP_PROPERTY_BASE(WhatToSpawn, AEscape_VectorSpawnLeecherVolume), 0x0000000000000001, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WhereToSpawn = new(OuterClass, TEXT("WhereToSpawn"), RF_Public|RF_Transient|RF_Native) UObjectProperty(CPP_PROPERTY_BASE(WhereToSpawn, AEscape_VectorSpawnLeecherVolume), 0x00000000044a0809, Z_Construct_UClass_UBoxComponent_NoRegister());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEscape_VectorSpawnLeecherVolume_DisableSpawning());
			OuterClass->AddFunctionToFunctionMap(Z_Construct_UFunction_AEscape_VectorSpawnLeecherVolume_EnableSpawning());
			OuterClass->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
			MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Escape_VectorSpawnLeecherVolume.h"));
			MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorSpawnLeecherVolume.h"));
			MetaData->SetValue(NewProp_iNbSpawnMax, TEXT("Category"), TEXT("Spawning"));
			MetaData->SetValue(NewProp_iNbSpawnMax, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorSpawnLeecherVolume.h"));
			MetaData->SetValue(NewProp_SpawnDelay, TEXT("Category"), TEXT("Spawning"));
			MetaData->SetValue(NewProp_SpawnDelay, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorSpawnLeecherVolume.h"));
			MetaData->SetValue(NewProp_WhatToSpawn, TEXT("Category"), TEXT("Spawning"));
			MetaData->SetValue(NewProp_WhatToSpawn, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorSpawnLeecherVolume.h"));
			MetaData->SetValue(NewProp_WhereToSpawn, TEXT("Category"), TEXT("Spawning"));
			MetaData->SetValue(NewProp_WhereToSpawn, TEXT("ModuleRelativePath"), TEXT("Public/Escape_VectorSpawnLeecherVolume.h"));
#endif
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEscape_VectorSpawnLeecherVolume(Z_Construct_UClass_AEscape_VectorSpawnLeecherVolume);
	UPackage* Z_Construct_UPackage_Escape_Vector()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Escape_Vector")), false, false));
			ReturnPackage->PackageFlags |= PKG_CompiledIn | 0x00000000;
			FGuid Guid;
			Guid.A = 0xFFC4BBF3;
			Guid.B = 0x1835BD4B;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);
		}
		return ReturnPackage;
	}
#endif

